{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITMO\\\\\\u0418\\u043D\\u0436\\u0435\\u043D\\u0435\\u0440 \\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0441\\u0442\\\\Diplom\\\\client\\\\src\\\\components\\\\AdminDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [selectedTable, setSelectedTable] = useState('users');\n  const [tableData, setTableData] = useState([]);\n  const [formData, setFormData] = useState({});\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [editId, setEditId] = useState(null);\n  const tables = ['users', 'products', 'product_prices', 'price_notifications', 'favorites'];\n  useEffect(() => {\n    fetchTableData();\n  }, [selectedTable]);\n  const fetchTableData = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/admin/${selectedTable}`);\n      const data = await response.json();\n      setTableData(data);\n    } catch (error) {\n      console.error('Error fetching table data:', error);\n    }\n  };\n  const handleFormChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleAdd = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/admin/${selectedTable}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      await response.json();\n      fetchTableData(); // Refresh table data after adding\n    } catch (error) {\n      console.error('Error adding data:', error);\n    }\n  };\n  const handleEdit = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/admin/${selectedTable}/${editId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      await response.json();\n      fetchTableData(); // Refresh table data after editing\n      setIsEditMode(false);\n      setEditId(null);\n      setFormData({});\n    } catch (error) {\n      console.error('Error updating data:', error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await fetch(`http://localhost:5000/admin/${selectedTable}/${id}`, {\n        method: 'DELETE'\n      });\n      fetchTableData(); // Refresh table data after deleting\n    } catch (error) {\n      console.error('Error deleting data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedTable,\n      onChange: e => setSelectedTable(e.target.value),\n      className: \"form-select mb-4\",\n      children: tables.map(table => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: table,\n        children: table\n      }, table, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [tableData.length > 0 && Object.keys(tableData[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 54\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tableData.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [Object.values(row).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: typeof value === 'object' && value !== null ? JSON.stringify(value) : String(value)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary me-2\",\n              onClick: () => {\n                setIsEditMode(true);\n                setEditId(row.id);\n                setFormData(row); // Prepopulate form for editing\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => handleDelete(row.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [Object.keys(tableData[0] || {}).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: key,\n          value: formData[key] || '',\n          onChange: handleFormChange,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        onClick: isEditMode ? handleEdit : handleAdd,\n        children: [isEditMode ? 'Update' : 'Add', \" Record\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"3d3YG0Z/yc0vQfeVZyBjlpDIP7o=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminDashboard","_s","selectedTable","setSelectedTable","tableData","setTableData","formData","setFormData","isEditMode","setIsEditMode","editId","setEditId","tables","fetchTableData","response","fetch","data","json","error","console","handleFormChange","e","target","name","value","handleAdd","method","headers","body","JSON","stringify","handleEdit","handleDelete","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","table","length","Object","keys","key","row","values","idx","String","onClick","type","_c","$RefreshReg$"],"sources":["D:/ITMO/Инженер Программист/Diplom/client/src/components/AdminDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst AdminDashboard: React.FC = () => {\r\n  const [selectedTable, setSelectedTable] = useState<string>('users');\r\n  const [tableData, setTableData] = useState<any[]>([]);\r\n  const [formData, setFormData] = useState<any>({});\r\n  const [isEditMode, setIsEditMode] = useState<boolean>(false);\r\n  const [editId, setEditId] = useState<number | null>(null);\r\n\r\n  const tables = ['users', 'products', 'product_prices', 'price_notifications', 'favorites'];\r\n\r\n  useEffect(() => {\r\n    fetchTableData();\r\n  }, [selectedTable]);\r\n\r\n  const fetchTableData = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/admin/${selectedTable}`);\r\n      const data = await response.json();\r\n      setTableData(data);\r\n    } catch (error) {\r\n      console.error('Error fetching table data:', error);\r\n    }\r\n  };\r\n\r\n  const handleFormChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAdd = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/admin/${selectedTable}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      await response.json();\r\n      fetchTableData();  // Refresh table data after adding\r\n    } catch (error) {\r\n      console.error('Error adding data:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/admin/${selectedTable}/${editId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n      await response.json();\r\n      fetchTableData();  // Refresh table data after editing\r\n      setIsEditMode(false);\r\n      setEditId(null);\r\n      setFormData({});\r\n    } catch (error) {\r\n      console.error('Error updating data:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: number) => {\r\n    try {\r\n      await fetch(`http://localhost:5000/admin/${selectedTable}/${id}`, { method: 'DELETE' });\r\n      fetchTableData();  // Refresh table data after deleting\r\n    } catch (error) {\r\n      console.error('Error deleting data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1>Admin Dashboard</h1>\r\n\r\n      {/* Table Selector */}\r\n      <select value={selectedTable} onChange={(e) => setSelectedTable(e.target.value)} className=\"form-select mb-4\">\r\n        {tables.map((table) => (\r\n          <option key={table} value={table}>\r\n            {table}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Table Data */}\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            {tableData.length > 0 &&\r\n              Object.keys(tableData[0]).map((key) => <th key={key}>{key}</th>)}\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableData.map((row) => (\r\n            <tr key={row.id}>\r\n              {Object.values(row).map((value, idx) => (\r\n                <td key={idx}>\r\n                  {typeof value === 'object' && value !== null ? JSON.stringify(value) : String(value)}\r\n                </td>\r\n              ))}\r\n              <td>\r\n                <button className=\"btn btn-primary me-2\" onClick={() => {\r\n                  setIsEditMode(true);\r\n                  setEditId(row.id);\r\n                  setFormData(row);  // Prepopulate form for editing\r\n                }}>\r\n                  Edit\r\n                </button>\r\n                <button className=\"btn btn-danger\" onClick={() => handleDelete(row.id)}>\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Add/Edit Form */}\r\n      <div className=\"mt-4\">\r\n        {Object.keys(tableData[0] || {}).map((key) => (\r\n          <div className=\"mb-3\" key={key}>\r\n            <label className=\"form-label\">{key}</label>\r\n            <input\r\n              type=\"text\"\r\n              name={key}\r\n              value={formData[key] || ''}\r\n              onChange={handleFormChange}\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n        ))}\r\n        <button className=\"btn btn-success\" onClick={isEditMode ? handleEdit : handleAdd}>\r\n          {isEditMode ? 'Update' : 'Add'} Record\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}