{"ast":null,"code":"var _jsxFileName = \"D:\\\\ITMO\\\\\\u0418\\u043D\\u0436\\u0435\\u043D\\u0435\\u0440 \\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0441\\u0442\\\\Diplom\\\\client\\\\src\\\\components\\\\ParentComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Searchbar from './Searchbar';\nimport Content from './Content';\nimport LoginModal from './LoginModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParentComponent = () => {\n  _s();\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const handleSelectProduct = product => {\n    setSelectedProduct(product);\n  };\n  const handleLoginSuccess = username => {\n    // Fetch the user ID based on the username or keep it in the state from the login response.\n    setLoggedInUser({\n      id: 1,\n      username\n    }); // This would normally come from your server\n    setShowLoginModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      onSelect: handleSelectProduct\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      selectedProduct: selectedProduct,\n      loggedInUser: loggedInUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowLoginModal(true),\n      children: loggedInUser ? `Logged in as ${loggedInUser.username}` : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginModal, {\n      show: showLoginModal,\n      onClose: () => setShowLoginModal(false),\n      onLoginSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ParentComponent, \"3fRIanj5RTrkG/l+bzlIIh2t1PY=\");\n_c = ParentComponent;\nexport default ParentComponent;\nvar _c;\n$RefreshReg$(_c, \"ParentComponent\");","map":{"version":3,"names":["React","useState","Searchbar","Content","LoginModal","jsxDEV","_jsxDEV","ParentComponent","_s","selectedProduct","setSelectedProduct","showLoginModal","setShowLoginModal","loggedInUser","setLoggedInUser","handleSelectProduct","product","handleLoginSuccess","username","id","children","onSelect","fileName","_jsxFileName","lineNumber","columnNumber","onClick","show","onClose","onLoginSuccess","_c","$RefreshReg$"],"sources":["D:/ITMO/Инженер Программист/Diplom/client/src/components/ParentComponent.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Searchbar from './Searchbar';\r\nimport Content from './Content';\r\nimport LoginModal from './LoginModal';\r\nimport {SearchResult} from './Searchbar';\r\n\r\ninterface User {\r\n  id: number;\r\n  username: string;\r\n}\r\n\r\nconst ParentComponent: React.FC = () => {\r\n  const [selectedProduct, setSelectedProduct] = useState<SearchResult | null>(null);\r\n  const [showLoginModal, setShowLoginModal] = useState<boolean>(false);\r\n  const [loggedInUser, setLoggedInUser] = useState<User | null>(null);\r\n\r\n  const handleSelectProduct = (product: SearchResult) => {\r\n    setSelectedProduct(product);\r\n  };\r\n\r\n  const handleLoginSuccess = (username: string) => {\r\n    // Fetch the user ID based on the username or keep it in the state from the login response.\r\n    setLoggedInUser({ id: 1, username });  // This would normally come from your server\r\n    setShowLoginModal(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Searchbar onSelect={handleSelectProduct} />\r\n      <Content selectedProduct={selectedProduct} loggedInUser={loggedInUser} />\r\n      <button onClick={() => setShowLoginModal(true)}>\r\n        {loggedInUser ? `Logged in as ${loggedInUser.username}` : 'Login'}\r\n      </button>\r\n      <LoginModal\r\n        show={showLoginModal}\r\n        onClose={() => setShowLoginModal(false)}\r\n        onLoginSuccess={handleLoginSuccess}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParentComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQtC,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAsB,IAAI,CAAC;EACjF,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EACpE,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAc,IAAI,CAAC;EAEnE,MAAMc,mBAAmB,GAAIC,OAAqB,IAAK;IACrDN,kBAAkB,CAACM,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMC,kBAAkB,GAAIC,QAAgB,IAAK;IAC/C;IACAJ,eAAe,CAAC;MAAEK,EAAE,EAAE,CAAC;MAAED;IAAS,CAAC,CAAC,CAAC,CAAE;IACvCN,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACEN,OAAA;IAAAc,QAAA,gBACEd,OAAA,CAACJ,SAAS;MAACmB,QAAQ,EAAEN;IAAoB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5CnB,OAAA,CAACH,OAAO;MAACM,eAAe,EAAEA,eAAgB;MAACI,YAAY,EAAEA;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzEnB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMd,iBAAiB,CAAC,IAAI,CAAE;MAAAQ,QAAA,EAC5CP,YAAY,GAAG,gBAAgBA,YAAY,CAACK,QAAQ,EAAE,GAAG;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eACTnB,OAAA,CAACF,UAAU;MACTuB,IAAI,EAAEhB,cAAe;MACrBiB,OAAO,EAAEA,CAAA,KAAMhB,iBAAiB,CAAC,KAAK,CAAE;MACxCiB,cAAc,EAAEZ;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA7BID,eAAyB;AAAAuB,EAAA,GAAzBvB,eAAyB;AA+B/B,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}